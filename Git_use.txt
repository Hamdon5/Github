学习Git：初始化一个Git仓库
1.初始化一个Git仓库，使用git init命令。

2.添加文件到Git仓库，分两步：
使用命令git add <file>，注意，可反复多次使用，添加多个文件
使用命令git commit -m <message>，完成（保存机制可以参考图片）


学习Git：还原文件历史版本
1.HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id，或者git reset --hard HEAD^(last version),git reset --hard aHEAD~3(last three version)
git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本

2.穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本

3.要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本


学习Git：撤销更改
1.命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
注：git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令

2.git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”
但只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容;

3.删除文件：若要的确删除文件，则用命令git rm删掉，并且git commit
当你要删除文件的时候，可以采用命令：rm test.txt
这个时候有两种情况:
第一种情况:的确要把test.txt删掉，那么可以执行
                   git rm test.txt
                   git commit -m "remove test.txt"
                   文件被删除，且删除记录上传本地库
第二种情况:误删文件，想恢复，这时候还没有commit -m "remove test.txt"，执行git checkout test.txt将文件恢复。
如果执行完git commit -m "remove test.txt"后就不能用checkout恢复了，得用git reset --hard HEAD^

学习Git：远程仓库

使用远程仓库前的准备：
1.请自行注册GitHub账号，你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的
2.创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
ssh-keygen -t rsa -C "youremail@example.com"
如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
3.登陆GitHub，打开“Account settings”，“SSH Keys”页面，然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容（全部内容），点击“Add Key”确认。
4.在一个系统中只需要执行以上的步骤一次即可，下一次添加其他的本地仓库不需要重新生成key


1.要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git，把上面的michaelliao替换成你自己的GitHub账户名，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库
例子：git remote add origin git@github.com:Hamdon5/C-Project.git
注意：建议使用SSH协议，HTTPS的通讯协议传输速度极慢（其中原因请自行Google）
2.关联后，使用命令git push -u origin master，第一次推送master分支的所有内容，由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令
3.此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
4.若想要把远程仓库的代码更新本地代码，可以使用命令git pull origin master

学习Git：克隆仓库
要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。
Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。


